---
- hosts:               all
  become:              yes
  become_method:       sudo
  vars:
    ansible_ssh_pipelining: true

  environment:
    NODE_ENV:          development

  vars_files:
    - vars/public.yml
    - vars/secret.yml

  pre_tasks:
    - name:            set environmental variables
      lineinfile:
        dest:          /etc/environment
        line:          "{{ item }}"
      with_items:
        - "ORCID_CLIENTID={{ ORCID_CLIENTID }}"
        - "ORCID_CLIENTSECRET={{ ORCID_CLIENTSECRET }}"
        - "ORCID_CALLBACK={{ ORCID_CALLBACK }}"
        - "PORT_MANGAL_OAUTH={{ PORT_MANGAL_OAUTH }}"
    - name:            Create postgres user
      user:            name=postgres comment="Postgres user"
    - name:            Install PostgreSQL, Nodejs, tmux dependencies
      apt:             name="{{ packages }}"
    - name:            Create mangal group
      group:           name=mangal state=present
    - name:            Create mangal UNIX user
      user:            name=mangal comment="Mangal user" group=mangal home=/var/mangal
    - name:            Create user mangal_bot in pgsql
      become:          true
      become_user:     postgres
      postgresql_user:
        name:          mangal_bot
        password:      "{{ db_pass }}"
    - name:            Create mangal databases
      become:          true
      become_user:     postgres
      postgresql_db:   name="{{ item }}"
      with_items:      "{{ dbs }}"
    - name:            Add Postgis extensions
      become:          true
      become_user:     postgres
      postgresql_ext:  name=postgis db="{{ item }}"
      with_items:      "{{ dbs }}"
    - name:            setup .pgpass
      become:          true
      become_user:     vagrant
      template:
        src:           templates/.pgpass.j2
        dest:          ~/.pgpass
        mode:          0600
    - name:            Install nginx
      apt:             name=nginx state=present update_cache=yes
      notify:
        - start nginx
    - name:            configure nginx
      copy:            src="{{ item }}" dest=/etc/nginx/sites-available/
      with_fileglob:
        - nginx/*
      notify:
        - restart nginx
    - name:            configure tmux
      become:          true
      become_user:     vagrant
      copy:            src="templates/.tmuxinator.yml" dest=~/
    - name:            Install "nodemon" node.js package.
      npm:
        name:          nodemon
        global:        yes
    - name:            Config tmux
      shell:           |
        git clone https://github.com/gpakosz/.tmux.git
        ln -s -f .tmux/.tmux.conf
        cp .tmux/.tmux.conf.local .

  handlers:
    - name:            restart postgresql
      service:         name=postgresql state=restarted
    - name:            restart nginx
      service:         name=nginx state=restarted
    - name:            start nginx
      service:         name=nginx state=started
